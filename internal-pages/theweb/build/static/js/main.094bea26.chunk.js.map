{"version":3,"sources":["textblocks.jsx","listitem.jsx","layouts.jsx","sidebar.jsx","api.js","settingstoggles.jsx","settings.jsx","about.jsx","newtab.jsx","App.jsx","index.jsx"],"names":["Header","props","className","this","title","React","Component","MiniHeader","ListItem","contents","icon","push","key","src","encodeURIComponent","style","text","cls","selected","onClick","itemContents","VerticalLayout","noBorder","children","HorizontalLine","Sidebar","_","paneName","onChange","sel","currentPane","t","i18n","Api","url","Promise","res","rej","request","XMLHttpRequest","addEventListener","responseText","open","send","get","then","JSON","parse","isOblivion","Settings","defaultValue","getSettings","settings","hasOwnProperty","value","api","lastId","getNextId","retval","SettingToggle","state","elId","currentValue","dummy","settingsKey","setState","setValue","RadioButtonGroup","elements","option","type","name","checked","e","target","options","generateElements","LineEdit","validation","getInputType","placeholder","onFocusOut","CheckBox","SettingsSidebar","SettingsPrivacyPane","window","confirm","SettingsGeneralPane","SettingsAdvancedPane","pane","changePane","currentSettingsPane","About","UrlBar","onKeyDown","keyCode","document","location","NewTab","oblivion","oblivionComponent","use","XHR","initReactI18next","init","fallbackLng","ns","backend","loadPath","process","react","useSuspense","App","s","lang","showSidebar","path","pathname","substr","startsWith","console","log","catch","popState","bind","history","pushState","err","language","changeLanguage","sidebarElement","componentNode","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.094bea26.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        return <div className=\"header\">\n            {this.props.title}\n        </div>\n    }\n}\n\nclass MiniHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        return <div className=\"miniheader\">\n            {this.props.title}\n        </div>\n    }\n}\n\nclass PaddedText extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        return <div className=\"Content\">\n            {this.props.title}\n        </div>\n    }\n}\n\nexport { Header };\nexport { MiniHeader };\nexport { PaddedText };\n","import React from 'react';\nimport './App.css';\n\nclass ListItem extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    itemContents() {\n        let contents = [];\n        if (this.props.icon) {\n            contents.push(<img key=\"image\" src={\"theweb://sysicons/?width=32&height=32&icons=\" + encodeURIComponent(this.props.icon)} style={{\"padding-right\": \"3px\"}} />)\n        }\n        contents.push(<span key=\"text\">{this.props.text}</span>);\n        return contents;\n    }\n    \n    render() {\n        let cls = \"ListItem\";\n        if (this.props.selected === \"true\") cls += \" selected\";\n        return <div className={cls} onClick={this.props.onClick}>\n            {this.itemContents()}\n        </div>\n    }\n}\n\nexport default ListItem;\n","import React from 'react';\nimport './App.css';\n\nclass VerticalLayout extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        return <div className={\"verticalContent\" + (this.props.noBorder ? \"\" : \" Content\")}>\n            {this.props.children}\n        </div>\n    }\n}\n\nclass HorizontalLine extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        return <div className=\"horizontalLine\" />\n    }\n}\n\nexport { VerticalLayout };\nexport { HorizontalLine };","import React from 'react';\nimport './App.css';\nimport { Header } from './textblocks.jsx'\nimport ListItem from './listitem.jsx'\nimport { HorizontalLine } from './layouts.jsx'\n\nimport { Translation } from 'react-i18next';\n\nclass Sidebar extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        let _ = (paneName) => {\n            return () => this.props.onChange(paneName);\n        }\n        \n        let sel = (paneName) => {\n            return this.props.currentPane === paneName ? \"true\" : \"false\";\n        }\n        \n        return <Translation>{(t, {i18n}) =>\n            <div className=\"Sidebar\">\n                <Header title=\"theWeb\" />\n                <ListItem icon=\"sys:bookmark-new\" text={t('BOOKMARKS_TITLE')} />\n                <ListItem icon=\"sys:downloads\" text={t('DOWNLOADS_TITLE')} />\n                <HorizontalLine />\n                <ListItem icon=\"sys:configure\" text={t('SETTINGS_TITLE')} onClick={_(\"settings\")} selected={sel(\"settings\")} />\n                <ListItem icon=\"sys:help-about\" text={t('ABOUT_TITLE')} onClick={_(\"about\")} selected={sel(\"about\")} />\n            </div>\n        }</Translation>\n    }\n}\n\nexport default Sidebar;\n","class Api {\n    get(url) {\n        return new Promise((res, rej) => {\n            let request = new XMLHttpRequest();\n            request.addEventListener(\"load\", () => {\n                res(request.responseText);\n            });\n            request.addEventListener(\"error\", () => {\n                rej();\n            });\n            request.open(\"GET\", url);\n            request.send();\n        });\n    }\n    \n    lang() {\n        return this.get(\"theweb://api/lang\");\n    }\n    \n    isOblivion() {\n        return this.get(\"theweb://api/oblivion\").then((res) => {\n            return JSON.parse(res).isOblivion;\n        })\n    }\n}\n\nclass Settings extends Api {\n    getSettings() {\n        return this.get(\"theweb://api/settings\").then((res) => {\n            return JSON.parse(res);\n        });\n    }\n    \n    value(key, defaultValue) {\n        return this.getSettings().then((settings) => {\n            if (settings.hasOwnProperty(key)) {\n                return settings[key];\n            } else {\n                return defaultValue;\n            }\n        });\n    }\n    \n    setValue(key, value) {\n        return new Promise((res, rej) => {\n            let request = new XMLHttpRequest();\n            request.addEventListener(\"load\", () => {\n                res();\n            });\n            request.addEventListener(\"error\", () => {\n                rej();\n            });\n            request.open(\"GET\", `theweb://api/settings/set?key=${encodeURIComponent(key)}&value=${encodeURIComponent(value)}`);\n            request.send();\n        });\n    }\n}\n\nlet api = new Api();\nlet settings = new Settings();\n\nexport { api };\nexport { settings };","import React from 'react';\nimport './App.css';\n\nimport { settings } from './api.js';\nimport { VerticalLayout } from './layouts.jsx';\n\nlet lastId = 0;\nfunction getNextId() {\n    let retval = `el${lastId}`;\n    lastId++;\n    return retval;\n}\n\nclass SettingToggle extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            elId: getNextId(),\n            currentValue: this.props.defaultValue,\n            dummy: this.props.settingsKey === null\n        }\n        \n        if (this.props.settingsKey !== null) {\n            settings.value(this.props.settingsKey, this.props.defaultValue).then((value) => {\n                this.setState({\n                    currentValue: value\n                });\n            });\n        }\n    }\n    \n    setValue(value) {\n        this.setState({\n            currentValue: value\n        });\n        \n        if (!this.state.dummy) {\n            settings.setValue(this.props.settingsKey, value);\n        }\n    }\n    \n    render() {\n        return <div style={{\"background-color\": \"red\", \"border\": \"1px solid yellow\", \"padding\": \"3px\"}}>I am an unimplemented setting toggle. !!!IMPLEMENT ME!!!</div>\n    }\n}\n\nclass RadioButtonGroup extends SettingToggle {\n    componentDidMount() {\n    \n    }\n    \n    generateElements() {\n        let elements = [];\n        for (const option of this.props.options) {\n            let onChangeHandler = (e) => {\n                if (e.target.value) {\n                    this.setValue(option.value);\n                }\n            };\n            \n            elements.push(<div key={option.value + this.state.elId}>\n                <label key={option.value + this.state.elId + \"label\"}>\n                    <input type=\"radio\" key={option.value + this.state.elId + \"radio\"} name={this.state.elId} value={option.value} checked={this.state.currentValue === option.value ? true : false} onChange={onChangeHandler} />\n                    {option.text}\n                </label>\n            </div>)\n        }\n        return elements;\n    }\n    \n    render() {\n        return <VerticalLayout noBorder='true'>\n            {this.generateElements()}\n        </VerticalLayout>\n    }\n}\n\nclass LineEdit extends SettingToggle {\n    constructor(props) {\n        super(props);\n    }\n    \n    getInputType() {\n        switch (this.props.validation) {\n            case \"url\":\n                return \"url\";\n            default:\n                return \"text\";\n        }\n    }\n    \n    render() {\n        let onChangeHandler = (e) => {\n            this.setState({\n                currentValue: e.target.value\n            });\n        };\n        let focusOutHandler = (e) => {\n            this.setValue(e.target.value);\n        };\n        \n        return <input type={this.getInputType()} value={this.state.currentValue} placeholder={this.props.placeholder} onChange={onChangeHandler} onFocusOut={focusOutHandler}/>\n    }\n}\n\nclass CheckBox extends SettingToggle {\n    render() {\n        let onChangeHandler = (e) => {\n            this.setValue(e.target.checked);\n        };\n        \n        return <label>\n            <input type=\"checkbox\" checked={this.state.currentValue} onChange={onChangeHandler} />\n            {this.props.text}\n        </label>\n    }\n}\n\nexport { RadioButtonGroup };\nexport { LineEdit };\nexport { CheckBox };","import React from 'react';\nimport './App.css';\nimport { Header, MiniHeader } from './textblocks.jsx'\nimport { VerticalLayout, HorizontalLine } from './layouts.jsx'\nimport ListItem from './listitem.jsx'\nimport { Translation } from 'react-i18next';\nimport { RadioButtonGroup, LineEdit, CheckBox } from './settingstoggles.jsx'\n\nclass SettingsSidebar extends React.Component {\n    render() {\n        let _ = (paneName) => {\n            return () => this.props.onChange(paneName);\n        }\n        \n        let sel = (paneName) => {\n            return this.props.currentPane === paneName ? \"true\" : \"false\";\n        }\n        \n        return <Translation>{(t, {i18n}) =>\n            <div className=\"Sidebar\">\n                <Header title={t('SETTINGS_TITLE')} />\n                <ListItem text={t('SETTINGS_GENERAL')} onClick={_(\"general\")} selected={sel(\"general\")} />\n                <ListItem text={t('SETTINGS_PRIVACY')} onClick={_(\"privacy\")} selected={sel(\"privacy\")} />\n                <ListItem text={t('SETTINGS_WEBSITES')} onClick={_(\"websites\")} selected={sel(\"websites\")} />\n                <ListItem text={t('SETTINGS_ADVANCED')} onClick={_(\"advanced\")} selected={sel(\"advanced\")} />\n            </div>\n        }</Translation>\n    }\n}\n\nclass SettingsPrivacyPane extends React.Component {\n    render() {\n        return <Translation>{(t, {i18n}) =>\n            <div>\n                <Header title={t('SETTINGS_PRIVACY')} />\n                <VerticalLayout>\n                    <MiniHeader title={t('SETTINGS_PRIVACY_CLEAR')} />\n                    <p>{t('SETTINGS_PRIVACY_CLEAR_EXPLANATION')}</p>\n                    <CheckBox text={t('SETTINGS_PRIVACY_CLEAR_HISTORY')} defaultValue={true} />\n                    <CheckBox text={t('SETTINGS_PRIVACY_CLEAR_COOKIES')} defaultValue={true} />\n                    <CheckBox text={t('SETTINGS_PRIVACY_CLEAR_CACHE')} defaultValue={true} />\n                    <button onClick={() => {window.confirm(\"Clear Data??????\")}}>{t('SETTINGS_PRIVACY_CLEAR_ACTION')}</button>\n                </VerticalLayout>\n                <HorizontalLine />\n                <VerticalLayout>\n                    <MiniHeader title={t('SETTINGS_PRIVACY')} />\n                    <p>{t('SETTINGS_PRIVACY_TOGGLES_EXPLANATION')}</p>\n                    <CheckBox text={t('SETTINGS_PRIVACY_TOGGLES_DNT')} defaultValue={true} settingsKey=\"privacy/dnt\" />\n                </VerticalLayout>\n            </div>\n        }</Translation>\n    }\n}\n\nclass SettingsGeneralPane extends React.Component {\n    render() {\n        return <Translation>{(t, {i18n}) =>\n            <div>\n                <Header title={t('SETTINGS_GENERAL')} />\n                <VerticalLayout>\n                    <MiniHeader title={t('SETTINGS_GENERAL_STARTUP')} />\n                    <p>{t('SETTINGS_GENERAL_STARTUP_EXPLANATION')}</p>\n                    <RadioButtonGroup options={\n                        [\n                            {value: \"homepage\", text: t('SETTINGS_STARTUP_HOME_PAGE')},\n                            {value: \"newtab\", text: t('SETTINGS_STARTUP_NEW_TAB')}\n                        ]\n                    } defaultValue='newtab' settingsKey='startup/action'/>\n                </VerticalLayout>\n                <HorizontalLine />\n                <VerticalLayout>\n                    <MiniHeader title={t('SETTINGS_GENERAL_HOME_PAGE')} />\n                    <p>{t('SETTINGS_GENERAL_HOME_PAGE_EXPLANATION')}</p>\n                    <LineEdit defaultValue=\"https://vicr123.com/\" settingsKey=\"startup/home\" validation=\"url\" />\n                </VerticalLayout>\n            </div>\n        }</Translation>\n    }\n}\n\nclass SettingsAdvancedPane extends React.Component {\n    render() {\n        return <Translation>{(t, {i18n}) =>\n            <div>\n                <Header title={t('SETTINGS_ADVANCED')} />\n                <VerticalLayout>\n                    <MiniHeader title={t('SETTINGS_ADVANCED_RESET')} />\n                    <p>{t('SETTINGS_ADVANCED_RESET_EXPLANATION')}</p>\n                    <button>{t('SETTINGS_ADVANCED_RESET_ACTION')}</button>\n                </VerticalLayout>\n            </div>\n        }</Translation>\n    }\n}\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            currentPane: \"general\"\n        };\n    }\n    \n    currentSettingsPane() {\n        switch (this.state.currentPane) {\n            case \"general\":\n                return <SettingsGeneralPane />;\n            case \"privacy\":\n                return <SettingsPrivacyPane />;\n            case \"advanced\":\n                return <SettingsAdvancedPane />;\n            default:\n                return <Translation>{(t, {i18n}) => \n                    <div>\n                        <Header title={t('INVALID_PAGE_TITLE')} />\n                        <div className=\"Content\">\n                            {t('INVALID_PAGE_CONTENT')}\n                        </div>\n                    </div>\n                }</Translation>\n        }\n    }\n    \n    changePane(pane) {\n        this.setState({\n            currentPane: pane\n        });\n    }\n    \n    render() {\n        return <Translation>{(t, {i18n}) =>\n            <div className=\"App\">\n                <SettingsSidebar currentPane={this.state.currentPane} onChange={(paneName) => this.changePane(paneName)} />\n                <div className=\"AppContainer\">\n                    {this.currentSettingsPane()}\n                </div>\n            </div>\n        }</Translation>\n    }\n}\n\nexport default Settings;\n","import React from 'react';\nimport './App.css';\nimport { Header, MiniHeader } from './textblocks.jsx'\nimport { VerticalLayout, HorizontalLine } from './layouts.jsx'\nimport ListItem from './listitem.jsx'\nimport { Translation } from 'react-i18next';\nimport { RadioButtonGroup, LineEdit, CheckBox } from './settingstoggles.jsx'\n\nclass About extends React.Component {\n    render() {\n        return <Translation>{(t, {i18n}) =>\n            <div>\n                <Header title={t('ABOUT_TITLE')} />\n                <VerticalLayout>\n                    who knows something goes here\n                </VerticalLayout>\n            </div>\n        }</Translation>\n    }\n}\n\nexport default About;","import React from 'react';\nimport './App.css';\nimport { Header, MiniHeader } from './textblocks.jsx'\nimport { VerticalLayout, HorizontalLine } from './layouts.jsx'\nimport ListItem from './listitem.jsx'\nimport { Translation } from 'react-i18next';\nimport { RadioButtonGroup, LineEdit, CheckBox } from './settingstoggles.jsx'\nimport { api } from './api.js';\n\nimport './newtab.css'\n\nclass UrlBar extends React.Component {\n    render() {\n        let keyDownHandler = (e) => {\n            if (e.keyCode == 13) document.location = e.target.value;\n        }\n        \n        return <div>\n            <input type=\"text\" className=\"urlBar\" placeholder=\"https://vicr123.com\" onKeyDown={keyDownHandler} />\n        </div>\n    }\n}\n\nclass NewTab extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            oblivion: false\n        }\n        \n        api.isOblivion().then((isOblivion) => {\n            this.setState({oblivion: isOblivion});\n        });\n    }\n    \n    oblivionComponent() {\n        if (this.state.oblivion) {\n            return <Translation>{(t, {i18n}) =>\n                <VerticalLayout>\n                    <div className=\"alert\">\n                        <MiniHeader title={t('NEWTAB_OBLIVION_TITLE')} />\n                        {t('NEWTAB_OBLIVION_EXPLANATION')}\n                    </div>\n                </VerticalLayout>\n            }</Translation>\n        }\n    }\n    \n    render() {\n        return <Translation>{(t, {i18n}) =>\n            <div style={{\"position\": \"fixed\", \"top\": \"0px\", \"left\": \"0px\", \"bottom\": \"0px\", \"right\": \"0px\"}}>\n                {this.oblivionComponent()}\n                <div className=\"newTabContainer\">\n                    <h1>{t('NEWTAB_GO_PROMPT')}</h1>\n                    <UrlBar />\n                </div>\n            </div>\n        }</Translation>\n    }\n}\n\nexport default NewTab;","import React from 'react';\nimport './App.css';\nimport Sidebar from './sidebar.jsx';\nimport { Header } from './textblocks.jsx'\n\nimport Settings from './settings.jsx';\nimport About from './about.jsx';\nimport NewTab from './newtab.jsx';\n\nimport i18n from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next, Translation } from 'react-i18next';\n\nimport { api } from './api.js';\n\ni18n.use(XHR)\n    .use(initReactI18next)\n    .init({\n        fallbackLng: [\"en\", false],\n        ns: ['translation'],\n        backend: {\n            loadPath: process.env.PUBLIC_URL + '/translations/{{lng}}/{{ns}}.json'\n        },\n        react: {\n            useSuspense: false\n        }\n    });\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        let s = {\n            lang: 'en',\n            showSidebar: true\n        };\n        const path = window.location.pathname.substr(2);\n        if (path.startsWith(\"settings\")) {\n            s.currentPane = \"settings\";\n        } else if (path.startsWith(\"about\")) {\n            s.currentPane = \"about\";\n        } else if (path.startsWith(\"newTab\") || true) {\n            s.currentPane = \"newtab\";\n            s.showSidebar = false;\n        } else {\n            s.currentPane = \"invalid\";\n        }\n        \n        this.state = s;\n    }\n    \n    componentDidMount() {\n        console.log(\"Loading language\");\n        api.lang().then(lang => {\n            this.setState({\n                lang: lang\n            });\n        }).catch(() => {\n            console.log(\"Language not obtainable\");\n        });\n        window.addEventListener(\"popstate\", this.popState.bind(this));\n    }\n    \n    popState(e) {\n        if (document.location.pathname.startsWith(\"//settings\")) {\n            this.setState({\n                currentPane: \"settings\"\n            });\n        } else if (document.location.pathname.startsWith(\"//about\")) {\n            this.setState({\n                currentPane: \"about\"\n            });\n        }\n    }\n    \n    componentNode() {\n        return <Translation>{(t, {i18n}) => {\n            switch (this.state.currentPane) {\n                case \"settings\":\n                    document.title = t('SETTINGS_TITLE');\n                    return <Settings />;\n                case \"about\":\n                    document.title = t('ABOUT_TITLE');\n                    return <About />\n                case \"newtab\":\n                    document.title = t('NEWTAB_TITLE');\n                    return <NewTab />\n                default:\n                    document.title = \"theWeb\";\n                    return <div>\n                        <Header title={t('INVALID_PAGE_TITLE')} />\n                        <div className=\"Content\">\n                            {t('INVALID_PAGE_CONTENT')}\n                        </div>\n                    </div>\n            }\n        }}</Translation>\n    }\n    \n    changePane(pane) {\n        try {\n            switch (pane) {\n                case \"settings\":\n                    window.history.pushState({}, \"\", \"theweb://settings\");\n                    break;\n                case \"about\":\n                    window.history.pushState({}, \"\", \"theweb://about\");\n                    break;\n            }\n        } catch (err) {\n            //Disregard\n        }\n        \n        this.setState({\n            currentPane: pane\n        });\n    }\n    \n    sidebarElement() {\n        if (this.state.showSidebar) {\n            return <Sidebar onChange={(paneName) => this.changePane(paneName)} currentPane={this.state.currentPane} />;\n        }\n    }\n    \n    render() {\n        return <Translation>{(t, {i18n}) => {\n            if (i18n.language !== this.state.lang) i18n.changeLanguage(this.state.lang);\n            return <div className=\"App\">\n                {this.sidebarElement()}\n                <div className=\"AppContainer\">\n                    {this.componentNode()}\n                </div>\n            </div>\n        }}</Translation>\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}